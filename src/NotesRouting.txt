Link: https://github.com/facebook/create-react-app

React Router Tutorial: https://www.robinwieruch.de/react-router/ 
Completed Code: https://github.com/the-road-to-learn-react/react-router-6-examples

1. How to create React project using Create-React-App 
     https://react.dev/learn/start-a-new-react-project#create-react-app
 
    npx create-react-app react-router6-tutorial - is a better way of creating a react app
            the advantage of this command is that instead of giving a copy Create React App
            package locally and manually maintaning it when it gets new releases,
            for example, with npx, you dont really need to do that, you just use whatever is the 
            recent release of Create React App directly from NPM registry in the server.

        "x" is for execute. if the package is not availble npm will download the
        package from the registry and cache it. It will also download a new one if needed
        At this point npm, is installig its depemdencies namely: react, react-dom and react-scripts...

  2. Next install react router:
      - https://reactrouter.com/en/v6.3.0/getting-started/installation#basic-installation

      - npm install react-router-dom@6

      - Once your project is set up and React Router is installed as a dependency, 
      open the src/index.js in your text editor. Import BrowserRouter from react-router-dom 
      near the top of your file and wrap your app in a <BrowserRouter>:'
        
         import { BrowserRouter } from 'react-router-dom';

      - next implement Navigation - scroll to "React Router: Matching Routes"

  3. Essence Of React Router: 
      The essence of React Router: setting up Link components and matching them  
     with Route components. Links have a many to one relationship to Routes, 
     so that there can be multiple Links in your application linking to the same Route.
 
 
  4. LAYOUT ROUTES, INDEX ROUTES, NO MATCH ROUTES
       Next you see how the new Home and Users component share the same layout. 
    We can create a Styling Component that can be shared.
    //Not allowed
     <Routes>
        <Layout>
          <Route path="home" element={<Home />} />
          <Route path="users" element={<Users />} />
        </Layout>
      </Routes>

     #Nested route is allowed
     <Routes>
        <Route element={<Layout />}>
          <Route path="home" element={<Home />} />
          <Route path="users" element={<Users />} />
        </Route>
      </Routes>

   5. React Router: Dynamic and Nested Routes
     - Read nested routes in detail: https://www.robinwieruch.de/react-router-nested-routes/